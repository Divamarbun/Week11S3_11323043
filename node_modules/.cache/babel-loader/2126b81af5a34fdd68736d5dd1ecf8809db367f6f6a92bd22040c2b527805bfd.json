{"ast":null,"code":"var _jsxFileName = \"D:\\\\Perkuliahan\\\\11323043_Diva Lorenza Marbun\\\\11323043_Diva Lorenza Marbun\\\\game-tictac\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ToggleButton.css'; // Importing a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToggleButton() {\n  _s();\n  // State to track the button's state (on/off)\n  const [isOn, setIsOn] = useState(false);\n  // State to track the countdown timer\n  const [timer, setTimer] = useState(10);\n  // State to track the custom timer duration input\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to handle click event\n  const handleClick = () => {\n    if (!isOn) {\n      const newTimer = parseInt(inputValue) || 10; // Use input value or default to 10 if empty or invalid\n      setTimer(newTimer);\n    }\n    setIsOn(!isOn); // Toggle the state\n  };\n\n  // Function to handle reset event\n  const handleReset = () => {\n    setIsOn(false); // Reset button state\n    setInputValue(''); // Reset input value\n    setTimer(10); // Reset timer\n  };\n\n  // Effect to update timer every second\n  useEffect(() => {\n    let interval;\n    if (isOn && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    } else if (timer === 0) {\n      setIsOn(false);\n    }\n\n    // Clear interval on component unmount or state change\n    return () => clearInterval(interval);\n  }, [isOn, timer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-button-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      className: isOn ? 'on' : 'off',\n      disabled: isOn && timer > 0,\n      children: [\" \", isOn ? 'Turn Off' : 'Turn On']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isOn && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      className: \"reset-button\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isOn ? `The button is on. Timer: ${timer}` : 'The button is off'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"timerInput\",\n        children: \"Set Timer Duration:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"timerInput\",\n        type: \"number\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        min: \"1\",\n        max: \"60\",\n        disabled: isOn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(ToggleButton, \"vIl8KkMuqCqyMYJDdv+yFyixUHg=\");\n_c = ToggleButton;\nexport default ToggleButton;\nvar _c;\n$RefreshReg$(_c, \"ToggleButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ToggleButton","_s","isOn","setIsOn","timer","setTimer","inputValue","setInputValue","handleClick","newTimer","parseInt","handleReset","interval","setInterval","prevTimer","clearInterval","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","e","target","min","max","_c","$RefreshReg$"],"sources":["D:/Perkuliahan/11323043_Diva Lorenza Marbun/11323043_Diva Lorenza Marbun/game-tictac/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ToggleButton.css'; // Importing a CSS file for styling\n\nfunction ToggleButton() {\n  // State to track the button's state (on/off)\n  const [isOn, setIsOn] = useState(false);\n  // State to track the countdown timer\n  const [timer, setTimer] = useState(10);\n  // State to track the custom timer duration input\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to handle click event\n  const handleClick = () => {\n    if (!isOn) {\n      const newTimer = parseInt(inputValue) || 10; // Use input value or default to 10 if empty or invalid\n      setTimer(newTimer);\n    }\n    setIsOn(!isOn); // Toggle the state\n  };\n\n  // Function to handle reset event\n  const handleReset = () => {\n    setIsOn(false); // Reset button state\n    setInputValue(''); // Reset input value\n    setTimer(10); // Reset timer\n  };\n\n  // Effect to update timer every second\n  useEffect(() => {\n    let interval;\n    if (isOn && timer > 0) {\n      interval = setInterval(() => {\n        setTimer(prevTimer => prevTimer - 1);\n      }, 1000);\n    } else if (timer === 0) {\n      setIsOn(false);\n    }\n\n    // Clear interval on component unmount or state change\n    return () => clearInterval(interval);\n  }, [isOn, timer]);\n\n  return (\n    <div className=\"toggle-button-container\"> {/* Applying a CSS class for styling */}\n      <button onClick={handleClick} className={isOn ? 'on' : 'off'} disabled={isOn && timer > 0}> {/* Applying dynamic class based on state */}\n        {isOn ? 'Turn Off' : 'Turn On'}\n      </button>\n      {isOn && <button onClick={handleReset} className=\"reset-button\">Reset</button>} {/* Render reset button conditionally */}\n      <p>{isOn ? `The button is on. Timer: ${timer}` : 'The button is off'}</p> {/* Displaying status message */}\n      <div>\n        <label htmlFor=\"timerInput\">Set Timer Duration:</label>\n        <input\n          id=\"timerInput\"\n          type=\"number\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          min=\"1\"\n          max=\"60\"\n          disabled={isOn}\n        />\n        <span> seconds</span>\n      </div>\n    </div>\n  );\n}\n\nexport default ToggleButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}